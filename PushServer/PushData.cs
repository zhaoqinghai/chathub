// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PushData.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from PushData.proto</summary>
public static partial class PushDataReflection {

  #region Descriptor
  /// <summary>File descriptor for PushData.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PushDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5QdXNoRGF0YS5wcm90byI9CghVc2VySW5mbxIMCgRuYW1lGAEgASgJEgoK",
          "AmlkGAIgASgEEhcKBnN0YXR1cxgDIAEoDjIHLlN0YXR1cyJhCg9TZW5kTWVz",
          "c2FnZUluZm8SEQoJc2VuZGVyX2lkGAEgASgEEhMKC3JlY2VpdmVyX2lkGAIg",
          "AygEEhQKDG1lc3NhZ2VfZGF0YRgDIAEoCRIQCghpc19ib2FyZBgEIAEoCCIv",
          "CgxSZXNwb25zZUluZm8SDAoEY29kZRgBIAEoDRIRCglqc29uX2RhdGEYAiAB",
          "KAkqIQoGU3RhdHVzEgoKBk9ubGluZRAAEgsKB09mZmxpbmUQATJmCgtQdXNo",
          "U2VydmljZRIlCgVMb2dpbhIJLlVzZXJJbmZvGg0uUmVzcG9uc2VJbmZvIgAw",
          "ARIwCgtTZW5kTWVzc2FnZRIQLlNlbmRNZXNzYWdlSW5mbxoNLlJlc3BvbnNl",
          "SW5mbyIAYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Status), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::UserInfo), global::UserInfo.Parser, new[]{ "Name", "Id", "Status" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SendMessageInfo), global::SendMessageInfo.Parser, new[]{ "SenderId", "ReceiverId", "MessageData", "IsBoard" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResponseInfo), global::ResponseInfo.Parser, new[]{ "Code", "JsonData" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum Status {
  /// <summary>
  ///在线状态
  /// </summary>
  [pbr::OriginalName("Online")] Online = 0,
  /// <summary>
  ///离线状态
  /// </summary>
  [pbr::OriginalName("Offline")] Offline = 1,
}

#endregion

#region Messages
public sealed partial class UserInfo : pb::IMessage<UserInfo> {
  private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PushDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserInfo(UserInfo other) : this() {
    name_ = other.name_;
    id_ = other.id_;
    status_ = other.status_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserInfo Clone() {
    return new UserInfo(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private ulong id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 3;
  private global::Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UserInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UserInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Id != other.Id) return false;
    if (Status != other.Status) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Id != 0UL) hash ^= Id.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Id != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Id);
    }
    if (Status != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Status);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Id != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
    }
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UserInfo other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Id != 0UL) {
      Id = other.Id;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Id = input.ReadUInt64();
          break;
        }
        case 24: {
          status_ = (global::Status) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class SendMessageInfo : pb::IMessage<SendMessageInfo> {
  private static readonly pb::MessageParser<SendMessageInfo> _parser = new pb::MessageParser<SendMessageInfo>(() => new SendMessageInfo());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SendMessageInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PushDataReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMessageInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMessageInfo(SendMessageInfo other) : this() {
    senderId_ = other.senderId_;
    receiverId_ = other.receiverId_.Clone();
    messageData_ = other.messageData_;
    isBoard_ = other.isBoard_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMessageInfo Clone() {
    return new SendMessageInfo(this);
  }

  /// <summary>Field number for the "sender_id" field.</summary>
  public const int SenderIdFieldNumber = 1;
  private ulong senderId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong SenderId {
    get { return senderId_; }
    set {
      senderId_ = value;
    }
  }

  /// <summary>Field number for the "receiver_id" field.</summary>
  public const int ReceiverIdFieldNumber = 2;
  private static readonly pb::FieldCodec<ulong> _repeated_receiverId_codec
      = pb::FieldCodec.ForUInt64(18);
  private readonly pbc::RepeatedField<ulong> receiverId_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<ulong> ReceiverId {
    get { return receiverId_; }
  }

  /// <summary>Field number for the "message_data" field.</summary>
  public const int MessageDataFieldNumber = 3;
  private string messageData_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MessageData {
    get { return messageData_; }
    set {
      messageData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "is_board" field.</summary>
  public const int IsBoardFieldNumber = 4;
  private bool isBoard_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsBoard {
    get { return isBoard_; }
    set {
      isBoard_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SendMessageInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SendMessageInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SenderId != other.SenderId) return false;
    if(!receiverId_.Equals(other.receiverId_)) return false;
    if (MessageData != other.MessageData) return false;
    if (IsBoard != other.IsBoard) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SenderId != 0UL) hash ^= SenderId.GetHashCode();
    hash ^= receiverId_.GetHashCode();
    if (MessageData.Length != 0) hash ^= MessageData.GetHashCode();
    if (IsBoard != false) hash ^= IsBoard.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SenderId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(SenderId);
    }
    receiverId_.WriteTo(output, _repeated_receiverId_codec);
    if (MessageData.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(MessageData);
    }
    if (IsBoard != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsBoard);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SenderId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SenderId);
    }
    size += receiverId_.CalculateSize(_repeated_receiverId_codec);
    if (MessageData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageData);
    }
    if (IsBoard != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SendMessageInfo other) {
    if (other == null) {
      return;
    }
    if (other.SenderId != 0UL) {
      SenderId = other.SenderId;
    }
    receiverId_.Add(other.receiverId_);
    if (other.MessageData.Length != 0) {
      MessageData = other.MessageData;
    }
    if (other.IsBoard != false) {
      IsBoard = other.IsBoard;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SenderId = input.ReadUInt64();
          break;
        }
        case 18:
        case 16: {
          receiverId_.AddEntriesFrom(input, _repeated_receiverId_codec);
          break;
        }
        case 26: {
          MessageData = input.ReadString();
          break;
        }
        case 32: {
          IsBoard = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class ResponseInfo : pb::IMessage<ResponseInfo> {
  private static readonly pb::MessageParser<ResponseInfo> _parser = new pb::MessageParser<ResponseInfo>(() => new ResponseInfo());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResponseInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PushDataReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseInfo(ResponseInfo other) : this() {
    code_ = other.code_;
    jsonData_ = other.jsonData_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseInfo Clone() {
    return new ResponseInfo(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private uint code_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "json_data" field.</summary>
  public const int JsonDataFieldNumber = 2;
  private string jsonData_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string JsonData {
    get { return jsonData_; }
    set {
      jsonData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResponseInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResponseInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (JsonData != other.JsonData) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != 0) hash ^= Code.GetHashCode();
    if (JsonData.Length != 0) hash ^= JsonData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Code);
    }
    if (JsonData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(JsonData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Code);
    }
    if (JsonData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResponseInfo other) {
    if (other == null) {
      return;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    if (other.JsonData.Length != 0) {
      JsonData = other.JsonData;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Code = input.ReadUInt32();
          break;
        }
        case 18: {
          JsonData = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
